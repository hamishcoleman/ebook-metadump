#!/usr/bin/env python2
#

import sys
import os
import yaml
import argparse

path = os.environ.get('CALIBRE_PYTHON_PATH', '/usr/lib/calibre')
if path not in sys.path:
    sys.path.insert(0, path)

sys.resources_location = os.environ.get('CALIBRE_RESOURCES_PATH', '/usr/share/calibre')
sys.extensions_location = os.environ.get('CALIBRE_EXTENSIONS_PATH', '/usr/lib/calibre/calibre/plugins')
#sys.executables_location = os.environ.get('CALIBRE_EXECUTABLES_PATH', '/usr/bin')

from calibre.ebooks.metadata.meta import get_metadata

def argparser():
    parser = argparse.ArgumentParser(
            description='Gather data from ebook')
    parser.add_argument('-v', '--verbose', action='count', default=0)
    parser.add_argument('files', nargs='+')
    return parser.parse_args()

def main():
    args = argparser()

    filename = args.files[0]

    stream_type = os.path.splitext(filename)[1].replace('.', '').lower()

    with open(filename, 'rb') as fd:
        mi = get_metadata(fd, stream_type, force_read_metadata=True)

    fields = mi.all_field_keys()
    db = dict()

    for field in fields:
        db[field] = mi.get(field)

    # remove some less useful, "large" items
    del db['cover_data']
    del db['guide']
    del db['manifest']
    del db['spine']

    print(yaml.dump(db))

    return 0

if __name__ == "__main__":
    sys.exit(main())
